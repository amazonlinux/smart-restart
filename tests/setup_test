#!/usr/bin/env bash

# Override the default varibles and setup some common functions
# used by all tests.
# This file needs to be sourced in all tests. Additionally, `TEST_NAME` can be set:
# TEST_NAME="MY NEW TEST"
# . "$(pwd)"/setup_test
# Also, to reset the state before test execution, call reset_test_environment in every test.

RED='\033[1;91m'
GREEN='\033[1;92m'
YELLOW='\033[1;93m'
BLUE='\033[1;94m'
PURPLE='\033[1;95m'
WHITE='\033[1;97m'

COLOR_OFF='\033[0m'

UUT=../bin/smart-restart.sh
export CONF_PATH="$(pwd)"/conf
export NEEDS_RESTARTING_COMMAND="$(pwd)"/mocks/needs-restarting
export SYSCTL_COMMAND="$(pwd)"/mocks/systemctl
export IS_TESTING="1"
export REBOOT_HINT_PATH="$(pwd)"

TEST_NAME="${TEST_NAME:-}"

echo -e "=========================== ${YELLOW}$TEST_NAME${COLOR_OFF} started "===========================

. $UUT

# We're testing here sourced bash scripts, global variables keep their values in between tests. 
# reset_test_environment resets them so every test starts from a clean state
reset_test_environment() {
    SERVICES=()
    BLOCKED_SERVICES=()
    PRE_RESTART_HEALTHY="0"
    POST_RESTART_HEALTHY="0"
    echo "" > conf/default-denylist
    echo "" > conf/custom-denylist
    rm -rf "$(pwd)/reboot-hint-marker"
}

PASSED() {
    echo -e " test ${TEST_NAME} [${GREEN}PASSED${COLOR_OFF}]: $1"
}

FAILED() {
    echo -e " test ${TEST_NAME} [${RED}FAILED${COLOR_OFF}]: $1"
}
